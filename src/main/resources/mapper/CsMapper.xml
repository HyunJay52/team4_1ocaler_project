<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team4.localer.dao.CsDAO">
	<select id="totalRecord" resultType="int">
		select count(${num}) from ${cate}
		<if test="!searchWord.equals('') and searchWord!=null"><!-- 검색을 고려한 if문 -->
  					where ${searchKey} like #{searchWord} 
  		</if>
	</select>
	<!--회원정산 테이블 totalRecord -->
	<select id="spendtotalRecord" resultType="int">
		select count(userid) from 
		(select ch3.userid, ch3.charge_point,ch3. spend_point, sum(sp2.sp_point) as add_point from 
		 (select ch2.userid, ch2.charge_point,ch2.spend_point ,mem.num from
		 (select ch.userid, ch.charge_point, sum(sp.sp_point) as spend_point from
		 (select userid,sum(cha_point) as charge_point  from cha_p group by userid) ch 
		 join sp_p sp on sp.userid(+)=ch.userid
		 group by ch.userid, ch.charge_point) ch2 join mem_share mem on mem.userid(+)=ch2.userid) ch3 
		 join sp_p sp2 on sp2.sp_item(+)=ch3.num group by ch3.userid, ch3.charge_point,ch3. spend_point)
		<if test="!searchWord.equals('') and searchWord!=null"><!-- 검색을 고려한 if문 -->
  					where ${searchKey} like #{searchWord} 
  		</if>
	</select>
	<select id="selspendtotalRecord" resultType="int">
		select count(sel1.sel_num) from 
				(select i.i_num as sel_num, sel.userid as sel_userid, i.i_subject as sel_subject from sell_item i join seller sel on sel.sel_num=i.sel_num) sel1
				join ordertbl o on o.num(+)=sel1.sel_num where o_date between to_date('21/${month}/01','YY/MM/DD') and to_date(last_day('21/${month}/01'),'YY/MM/DD')
				<if test="!searchWord.equals('') and searchWord!=null">
					and ${searchKey} like #{searchWord}
				</if>
	</select>
	<select id="onePageRecordSelect_rep" resultType="com.team4.localer.vo.ReportVO">
		select * from
			(select *from
				(select rep_num, userid, rep_subject , rep_status, to_char(rep_writedate, 'MM-DD HH:MI') rep_writedate from report
				<if test="!searchWord.equals('') and searchWord!=null"><!-- 검색어가 있을때 -->
					where ${searchKey} like #{searchWord}
				</if>
				order by rep_num desc)
					where rownum <![CDATA[<=]]> ${pageNum}*${onePageRecord} order by rep_num )
					where rownum <![CDATA[<=]]>
					<if test="pageNum == totalPage"><!-- 현재페이지 == 총페이지 -->
						${lastPageRecord}
					</if>
					<if test="pageNum != totalPage">
						${onePageRecord}
					</if>
					order by rep_num desc
									
	</select>
	<select id="onePageRecordSelect_cs" resultType="com.team4.localer.vo.CsVO">
		select * from
			(select *from
				(select cs_num, userid, cs_subject , cs_status, to_char(cs_writedate, 'MM-DD HH:MI') cs_writedate from ${cate}
				<if test="!searchWord.equals('') and searchWord!=null"><!-- 검색어가 있을때 -->
					where ${searchKey} like #{searchWord}
				</if>
				order by ${num} desc)
					where rownum <![CDATA[<]]>= (${pageNum}*${onePageRecord}) order by ${num} )
					where rownum <![CDATA[<]]>=
					<if test="pageNum == totalPage"><!-- 현재페이지 == 총페이지 -->
						${lastPageRecord}
					</if>
					<if test="pageNum != totalPage">
						${onePageRecord}
					</if>
					order by ${num} desc
									
	</select>
	<select id="onePageRecordSelect_of" resultType="com.team4.localer.vo.OftenqVO">
		select * from
			(select *from
				(select of_num, of_subject ,of_cate  from oftenq
				<if test="!searchWord.equals('') and searchWord!=null"><!-- 검색어가 있을때 -->
					where ${searchKey} like #{searchWord}
				</if>
				order by ${num} desc)
					where rownum <![CDATA[<]]>= (${pageNum}*${onePageRecord}) order by ${num} )
					where rownum <![CDATA[<]]>=
					<if test="pageNum == totalPage"><!-- 현재페이지 == 총페이지 -->
						${lastPageRecord}
					</if>
					<if test="pageNum != totalPage">
						${onePageRecord}
					</if>
					order by ${num} desc
									
	</select>
	<select id="csTblSelect" resultType="com.team4.localer.vo.CsVO">
  		select cs_num, userid, cs_cate, cs_subject ,cs_content, cs_status, cs_answer, to_char(cs_writedate, 'MM-DD HH:MI') cs_writedate  
  		from cs where cs_status=1 order by cs_num
  	</select>
	<select id="boardAllSelect" resultType="com.team4.localer.vo.CsVO">
  		select cs_num, userid, cs_cate, cs_subject ,cs_content, cs_status, cs_answer, to_char(cs_writedate, 'MM-DD HH:MI') cs_writedate  
  		from cs order by cs_num
  	</select>
  	<select id="boardSelect" resultType="com.team4.localer.vo.CsVO">
  		select cs_num, userid, cs_cate, cs_subject, cs_content, cs_status, cs_answer, 
  		to_char(cs_writedate, 'MM-DD HH:MI') cs_writedate, to_char(cs_date, 'MM-DD HH:MI') cs_date 
  		from cs where cs_num=#{param1}
  	</select>
  	<update id="boardUpdate" parameterType="com.team4.localer.vo.CsVO">
  		update cs set cs_answer=#{cs_answer}, cs_date=sysdate, cs_status=2 where cs_num=#{cs_num} 
  	</update>
  	<select id="oftenqSelect" resultType="com.team4.localer.vo.CsVO">
  		select of_num cs_num, of_subject cs_subject, of_content cs_content,
  		of_cate cs_cate from oftenq order by of_num desc
  	</select>
  	<select id="reportSelect" resultType="com.team4.localer.vo.ReportVO">
  		select rep_num,rep_subject, userid, 
  		to_char(rep_writedate,'MM-DD HH:MI') rep_writedate, rep_status 
  		from report order by rep_num desc
  	</select>
  	<select id="oftenqOneSelect" resultType="com.team4.localer.vo.OftenqVO">
  		select of_num, of_subject, of_content, of_cate from oftenq where of_num=#{param1}
  	</select>
  	<update id="oftenqUpdate" parameterType="com.team4.localer.vo.OftenqVO">
  		update oftenq set of_subject=#{of_subject}, of_content=#{of_content} where of_num=#{of_num}
  	</update>
  	<delete id="oftenqDelete">
  		delete from oftenq where of_num=#{param1}
  	</delete>
  	<insert id="oftenqInsert" parameterType="com.team4.localer.vo.OftenqVO">
  		insert into oftenq(of_num,of_subject,of_content,of_cate)
  		values(boardsq.nextval,#{of_subject},#{of_content},#{of_cate})
  	</insert>
  	<select id="reportOneSelect" resultType="com.team4.localer.vo.ReportVO">
  		select rep_num, num, userid, rep_content,rep_subject,rep_status,rep_ok,rep_writedate
  		from report where rep_num=#{param1}
  	</select>
  	<update id="reportUpdate" parameterType="com.team4.localer.vo.ReportVO">
  		update report set rep_status=#{rep_status}, rep_ok = sysdate where rep_num=#{rep_num}
  	</update>
  	<!-- 검색부분 -->
  	<select id="searchReport" resultType="com.team4.localer.vo.CsVO">
  		select rep_num cs_num,rep_subject cs_subject, userid, 
  		to_char(rep_writedate,'MM-DD HH:MI') cs_writedate, rep_status cs_status
  		from report where ${param1} like #{param2} order by rep_num desc
  	</select>
  	<select id="searchOftenq" resultType="com.team4.localer.vo.CsVO">
  		select of_num cs_num, of_subject cs_subject, of_content cs_content, 
  		of_cate cs_cate from oftenq where ${param1} like #{param2} order by of_num desc
  	</select>
  	<select id="searchCs" resultType="com.team4.localer.vo.CsVO">
  		select cs_num, userid, cs_cate, cs_subject ,cs_content, cs_status, cs_answer, to_char(cs_writedate, 'MM-DD HH:MI') cs_writedate  
  		from cs where ${param1} like #{param2} order by cs_num
  	</select>
  	
 <!--view page sql -->
 	<insert id="reportInsert" parameterType="com.team4.localer.vo.ReportVO">
 		INSERT INTO report(rep_num, num, userid, rep_subject, rep_content) values (reqsq.nextval, ${num}, #{userid}, #{rep_subject}, #{rep_content})
 	</insert>
 	
 	<insert id="csQnaInsert" parameterType="com.team4.localer.vo.CsVO">
 		INSERT INTO CS(cs_num, userid, cs_cate, cs_subject, cs_content) 
 		VALUES (cssq.nextval, #{userid}, #{cs_cate}, #{cs_subject}, #{cs_content})
 	</insert>
 	
 	<select id="selectAlloftenQ" resultType="com.team4.localer.vo.OftenqVO">
 		select * from oftenQ order by of_cnt desc
 	</select>
 	<update id="oftenqnaCnt">
 		update oftenQ set of_cnt=of_cnt+0.5 where of_num=#{param1}
 	</update>
 	
 	<select id="searchOftenqView" resultType="com.team4.localer.vo.CsVO">
  		select of_num cs_num, of_subject cs_subject, of_content cs_content, 
  		of_cate cs_cate from oftenQ where of_cate=#{param1} and of_subject like #{param2} order by of_cnt desc
  	</select>
</mapper>